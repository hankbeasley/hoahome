//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using HOAHome.Code.EntityFramework;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_UserHome_AppUser", "AppUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HOAHome.Models.AppUser), "UserHome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.UserHome), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_UserHome_Home", "Home", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HOAHome.Models.Home), "UserHome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.UserHome), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_Neighborhood_AppUser", "AppUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.AppUser), "Neighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.Neighborhood), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_Content_ContentType", "ContentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HOAHome.Models.ContentType), "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.Content), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_Content_Neighborhood", "Neighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HOAHome.Models.Neighborhood), "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.Content), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_UserNeighborHood_AppUser", "AppUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.AppUser), "UserNeighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.UserNeighborhood), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_UserNeighborHood_Neighborhood", "Neighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.Neighborhood), "UserNeighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.UserNeighborhood), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_UserNeighborHood_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.Role), "UserNeighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.UserNeighborhood), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_NeighboorhoodHome_Home", "Home", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.Home), "NeighboorhoodHome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.NeighboorhoodHome), true)]
[assembly: EdmRelationshipAttribute("COHHomeModel", "FK_NeighboorhoodHome_Neighborhood", "Neighborhood", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAHome.Models.Neighborhood), "NeighboorhoodHome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAHome.Models.NeighboorhoodHome), true)]

#endregion

namespace HOAHome.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class COHHomeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new COHHomeEntities object using the connection string found in the 'COHHomeEntities' section of the application configuration file.
        /// </summary>
        public COHHomeEntities() : base("name=COHHomeEntities", "COHHomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new COHHomeEntities object.
        /// </summary>
        public COHHomeEntities(string connectionString) : base(connectionString, "COHHomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new COHHomeEntities object.
        /// </summary>
        public COHHomeEntities(EntityConnection connection) : base(connection, "COHHomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppUser> AppUsers
        {
            get
            {
                if ((_AppUsers == null))
                {
                    _AppUsers = base.CreateObjectSet<AppUser>("AppUsers");
                }
                return _AppUsers;
            }
        }
        private ObjectSet<AppUser> _AppUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Home> Homes
        {
            get
            {
                if ((_Homes == null))
                {
                    _Homes = base.CreateObjectSet<Home>("Homes");
                }
                return _Homes;
            }
        }
        private ObjectSet<Home> _Homes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Neighborhood> Neighborhoods
        {
            get
            {
                if ((_Neighborhoods == null))
                {
                    _Neighborhoods = base.CreateObjectSet<Neighborhood>("Neighborhoods");
                }
                return _Neighborhoods;
            }
        }
        private ObjectSet<Neighborhood> _Neighborhoods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserHome> UserHomes
        {
            get
            {
                if ((_UserHomes == null))
                {
                    _UserHomes = base.CreateObjectSet<UserHome>("UserHomes");
                }
                return _UserHomes;
            }
        }
        private ObjectSet<UserHome> _UserHomes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentType> ContentTypes
        {
            get
            {
                if ((_ContentTypes == null))
                {
                    _ContentTypes = base.CreateObjectSet<ContentType>("ContentTypes");
                }
                return _ContentTypes;
            }
        }
        private ObjectSet<ContentType> _ContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserNeighborhood> UserNeighborhoods
        {
            get
            {
                if ((_UserNeighborhoods == null))
                {
                    _UserNeighborhoods = base.CreateObjectSet<UserNeighborhood>("UserNeighborhoods");
                }
                return _UserNeighborhoods;
            }
        }
        private ObjectSet<UserNeighborhood> _UserNeighborhoods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NeighboorhoodHome> NeighboorhoodHomes
        {
            get
            {
                if ((_NeighboorhoodHomes == null))
                {
                    _NeighboorhoodHomes = base.CreateObjectSet<NeighboorhoodHome>("NeighboorhoodHomes");
                }
                return _NeighboorhoodHomes;
            }
        }
        private ObjectSet<NeighboorhoodHome> _NeighboorhoodHomes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppUsers(AppUser appUser)
        {
            base.AddObject("AppUsers", appUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Homes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHomes(Home home)
        {
            base.AddObject("Homes", home);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Neighborhoods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNeighborhoods(Neighborhood neighborhood)
        {
            base.AddObject("Neighborhoods", neighborhood);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserHomes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserHomes(UserHome userHome)
        {
            base.AddObject("UserHomes", userHome);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentTypes(ContentType contentType)
        {
            base.AddObject("ContentTypes", contentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserNeighborhoods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserNeighborhoods(UserNeighborhood userNeighborhood)
        {
            base.AddObject("UserNeighborhoods", userNeighborhood);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NeighboorhoodHomes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNeighboorhoodHomes(NeighboorhoodHome neighboorhoodHome)
        {
            base.AddObject("NeighboorhoodHomes", neighboorhoodHome);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="AppUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppUser : EntityObject, IEntity ,IAuditable
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="googleId">Initial value of the GoogleId property.</param>
        /// <param name="completedRegistration">Initial value of the CompletedRegistration property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static AppUser CreateAppUser(global::System.Guid id, global::System.String googleId, global::System.Boolean completedRegistration, global::System.DateTime createdDate, global::System.DateTime modifiedDate, global::System.String displayName)
        {
            AppUser appUser = new AppUser();
            appUser.Id = id;
            appUser.GoogleId = googleId;
            appUser.CompletedRegistration = completedRegistration;
            appUser.CreatedDate = createdDate;
            appUser.ModifiedDate = modifiedDate;
            appUser.DisplayName = displayName;
            return appUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GoogleId
        {
            get
            {
                return _GoogleId;
            }
            set
            {
                OnGoogleIdChanging(value);
                ReportPropertyChanging("GoogleId");
                _GoogleId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GoogleId");
                OnGoogleIdChanged();
            }
        }
        private global::System.String _GoogleId;
        partial void OnGoogleIdChanging(global::System.String value);
        partial void OnGoogleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessToken
        {
            get
            {
                return _AccessToken;
            }
            set
            {
                OnAccessTokenChanging(value);
                ReportPropertyChanging("AccessToken");
                _AccessToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessToken");
                OnAccessTokenChanged();
            }
        }
        private global::System.String _AccessToken;
        partial void OnAccessTokenChanging(global::System.String value);
        partial void OnAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessTokenSecret
        {
            get
            {
                return _AccessTokenSecret;
            }
            set
            {
                OnAccessTokenSecretChanging(value);
                ReportPropertyChanging("AccessTokenSecret");
                _AccessTokenSecret = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessTokenSecret");
                OnAccessTokenSecretChanged();
            }
        }
        private global::System.String _AccessTokenSecret;
        partial void OnAccessTokenSecretChanging(global::System.String value);
        partial void OnAccessTokenSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CompletedRegistration
        {
            get
            {
                return _CompletedRegistration;
            }
            set
            {
                OnCompletedRegistrationChanging(value);
                ReportPropertyChanging("CompletedRegistration");
                _CompletedRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedRegistration");
                OnCompletedRegistrationChanged();
            }
        }
        private global::System.Boolean _CompletedRegistration;
        partial void OnCompletedRegistrationChanging(global::System.Boolean value);
        partial void OnCompletedRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserHome_AppUser", "UserHome")]
        public EntityCollection<UserHome> UserHomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserHome>("COHHomeModel.FK_UserHome_AppUser", "UserHome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserHome>("COHHomeModel.FK_UserHome_AppUser", "UserHome", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Neighborhood_AppUser", "Neighborhood")]
        public EntityCollection<Neighborhood> Neighborhoods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Neighborhood>("COHHomeModel.FK_Neighborhood_AppUser", "Neighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Neighborhood>("COHHomeModel.FK_Neighborhood_AppUser", "Neighborhood", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_AppUser", "UserNeighborhood")]
        public EntityCollection<UserNeighborhood> UserNeighborhoods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_AppUser", "UserNeighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_AppUser", "UserNeighborhood", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Content CreateContent(global::System.Guid id)
        {
            Content content = new Content();
            content.Id = id;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContentTypeId
        {
            get
            {
                return _ContentTypeId;
            }
            set
            {
                OnContentTypeIdChanging(value);
                ReportPropertyChanging("ContentTypeId");
                _ContentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentTypeId");
                OnContentTypeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ContentTypeId;
        partial void OnContentTypeIdChanging(Nullable<global::System.Guid> value);
        partial void OnContentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> NeighborhoodId
        {
            get
            {
                return _NeighborhoodId;
            }
            set
            {
                OnNeighborhoodIdChanging(value);
                ReportPropertyChanging("NeighborhoodId");
                _NeighborhoodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeighborhoodId");
                OnNeighborhoodIdChanged();
            }
        }
        private Nullable<global::System.Guid> _NeighborhoodId;
        partial void OnNeighborhoodIdChanging(Nullable<global::System.Guid> value);
        partial void OnNeighborhoodIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Content_ContentType", "ContentType")]
        public ContentType ContentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("COHHomeModel.FK_Content_ContentType", "ContentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("COHHomeModel.FK_Content_ContentType", "ContentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentType> ContentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentType>("COHHomeModel.FK_Content_ContentType", "ContentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentType>("COHHomeModel.FK_Content_ContentType", "ContentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Content_Neighborhood", "Neighborhood")]
        public Neighborhood Neighborhood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_Content_Neighborhood", "Neighborhood").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_Content_Neighborhood", "Neighborhood").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Neighborhood> NeighborhoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_Content_Neighborhood", "Neighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Neighborhood>("COHHomeModel.FK_Content_Neighborhood", "Neighborhood", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="ContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentType : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ContentType CreateContentType(global::System.Guid id)
        {
            ContentType contentType = new ContentType();
            contentType.Id = id;
            return contentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Content_ContentType", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("COHHomeModel.FK_Content_ContentType", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("COHHomeModel.FK_Content_ContentType", "Content", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="Home")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Home : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Home object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Home CreateHome(global::System.Guid id)
        {
            Home home = new Home();
            home.Id = id;
            return home;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressFull
        {
            get
            {
                return _AddressFull;
            }
            set
            {
                OnAddressFullChanging(value);
                ReportPropertyChanging("AddressFull");
                _AddressFull = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressFull");
                OnAddressFullChanged();
            }
        }
        private global::System.String _AddressFull;
        partial void OnAddressFullChanging(global::System.String value);
        partial void OnAddressFullChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoogleFeatureId
        {
            get
            {
                return _GoogleFeatureId;
            }
            set
            {
                OnGoogleFeatureIdChanging(value);
                ReportPropertyChanging("GoogleFeatureId");
                _GoogleFeatureId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GoogleFeatureId");
                OnGoogleFeatureIdChanged();
            }
        }
        private global::System.String _GoogleFeatureId;
        partial void OnGoogleFeatureIdChanging(global::System.String value);
        partial void OnGoogleFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserHome_Home", "UserHome")]
        public EntityCollection<UserHome> UserHomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserHome>("COHHomeModel.FK_UserHome_Home", "UserHome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserHome>("COHHomeModel.FK_UserHome_Home", "UserHome", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_NeighboorhoodHome_Home", "NeighboorhoodHome")]
        public EntityCollection<NeighboorhoodHome> NeighboorhoodHomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeighboorhoodHome>("COHHomeModel.FK_NeighboorhoodHome_Home", "NeighboorhoodHome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeighboorhoodHome>("COHHomeModel.FK_NeighboorhoodHome_Home", "NeighboorhoodHome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="NeighboorhoodHome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeighboorhoodHome : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NeighboorhoodHome object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="neighborhoodId">Initial value of the NeighborhoodId property.</param>
        /// <param name="homeId">Initial value of the HomeId property.</param>
        public static NeighboorhoodHome CreateNeighboorhoodHome(global::System.Guid id, global::System.Guid neighborhoodId, global::System.Guid homeId)
        {
            NeighboorhoodHome neighboorhoodHome = new NeighboorhoodHome();
            neighboorhoodHome.Id = id;
            neighboorhoodHome.NeighborhoodId = neighborhoodId;
            neighboorhoodHome.HomeId = homeId;
            return neighboorhoodHome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NeighborhoodId
        {
            get
            {
                return _NeighborhoodId;
            }
            set
            {
                OnNeighborhoodIdChanging(value);
                ReportPropertyChanging("NeighborhoodId");
                _NeighborhoodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeighborhoodId");
                OnNeighborhoodIdChanged();
            }
        }
        private global::System.Guid _NeighborhoodId;
        partial void OnNeighborhoodIdChanging(global::System.Guid value);
        partial void OnNeighborhoodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HomeId
        {
            get
            {
                return _HomeId;
            }
            set
            {
                OnHomeIdChanging(value);
                ReportPropertyChanging("HomeId");
                _HomeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeId");
                OnHomeIdChanged();
            }
        }
        private global::System.Guid _HomeId;
        partial void OnHomeIdChanging(global::System.Guid value);
        partial void OnHomeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_NeighboorhoodHome_Home", "Home")]
        public Home Home
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_NeighboorhoodHome_Home", "Home").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_NeighboorhoodHome_Home", "Home").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Home> HomeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_NeighboorhoodHome_Home", "Home");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Home>("COHHomeModel.FK_NeighboorhoodHome_Home", "Home", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_NeighboorhoodHome_Neighborhood", "Neighborhood")]
        public Neighborhood Neighborhood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "Neighborhood").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "Neighborhood").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Neighborhood> NeighborhoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "Neighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Neighborhood>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "Neighborhood", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="Neighborhood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Neighborhood : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Neighborhood object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="primaryContactId">Initial value of the PrimaryContactId property.</param>
        public static Neighborhood CreateNeighborhood(global::System.Guid id, global::System.Guid primaryContactId)
        {
            Neighborhood neighborhood = new Neighborhood();
            neighborhood.Id = id;
            neighborhood.PrimaryContactId = primaryContactId;
            return neighborhood;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PrimaryContactId
        {
            get
            {
                return _PrimaryContactId;
            }
            set
            {
                OnPrimaryContactIdChanging(value);
                ReportPropertyChanging("PrimaryContactId");
                _PrimaryContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryContactId");
                OnPrimaryContactIdChanged();
            }
        }
        private global::System.Guid _PrimaryContactId;
        partial void OnPrimaryContactIdChanging(global::System.Guid value);
        partial void OnPrimaryContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KML
        {
            get
            {
                return _KML;
            }
            set
            {
                OnKMLChanging(value);
                ReportPropertyChanging("KML");
                _KML = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KML");
                OnKMLChanged();
            }
        }
        private global::System.String _KML;
        partial void OnKMLChanging(global::System.String value);
        partial void OnKMLChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Neighborhood_AppUser", "AppUser")]
        public AppUser PrimaryContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_Neighborhood_AppUser", "AppUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_Neighborhood_AppUser", "AppUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUser> PrimaryContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_Neighborhood_AppUser", "AppUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUser>("COHHomeModel.FK_Neighborhood_AppUser", "AppUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_Content_Neighborhood", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("COHHomeModel.FK_Content_Neighborhood", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("COHHomeModel.FK_Content_Neighborhood", "Content", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_Neighborhood", "UserNeighborhood")]
        public EntityCollection<UserNeighborhood> UserNeighborhoods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "UserNeighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "UserNeighborhood", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_NeighboorhoodHome_Neighborhood", "NeighboorhoodHome")]
        public EntityCollection<NeighboorhoodHome> NeighboorhoodHomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeighboorhoodHome>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "NeighboorhoodHome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeighboorhoodHome>("COHHomeModel.FK_NeighboorhoodHome_Neighborhood", "NeighboorhoodHome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Guid id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_Role", "UserNeighborhood")]
        public EntityCollection<UserNeighborhood> UserNeighborhoods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_Role", "UserNeighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserNeighborhood>("COHHomeModel.FK_UserNeighborHood_Role", "UserNeighborhood", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="UserHome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserHome : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserHome object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserHome CreateUserHome(global::System.Guid id)
        {
            UserHome userHome = new UserHome();
            userHome.Id = id;
            return userHome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AppUserId
        {
            get
            {
                return _AppUserId;
            }
            set
            {
                OnAppUserIdChanging(value);
                ReportPropertyChanging("AppUserId");
                _AppUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppUserId");
                OnAppUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _AppUserId;
        partial void OnAppUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnAppUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> HomeId
        {
            get
            {
                return _HomeId;
            }
            set
            {
                OnHomeIdChanging(value);
                ReportPropertyChanging("HomeId");
                _HomeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeId");
                OnHomeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _HomeId;
        partial void OnHomeIdChanging(Nullable<global::System.Guid> value);
        partial void OnHomeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationType
        {
            get
            {
                return _RelationType;
            }
            set
            {
                OnRelationTypeChanging(value);
                ReportPropertyChanging("RelationType");
                _RelationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelationType");
                OnRelationTypeChanged();
            }
        }
        private global::System.String _RelationType;
        partial void OnRelationTypeChanging(global::System.String value);
        partial void OnRelationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserHome_AppUser", "AppUser")]
        public AppUser AppUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserHome_AppUser", "AppUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserHome_AppUser", "AppUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUser> AppUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserHome_AppUser", "AppUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUser>("COHHomeModel.FK_UserHome_AppUser", "AppUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserHome_Home", "Home")]
        public Home Home
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_UserHome_Home", "Home").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_UserHome_Home", "Home").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Home> HomeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("COHHomeModel.FK_UserHome_Home", "Home");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Home>("COHHomeModel.FK_UserHome_Home", "Home", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COHHomeModel", Name="UserNeighborhood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserNeighborhood : EntityObject, IEntity 
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserNeighborhood object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="neighborhoodId">Initial value of the NeighborhoodId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserNeighborhood CreateUserNeighborhood(global::System.Guid id, global::System.Guid userId, global::System.Guid neighborhoodId, global::System.Guid roleId)
        {
            UserNeighborhood userNeighborhood = new UserNeighborhood();
            userNeighborhood.Id = id;
            userNeighborhood.UserId = userId;
            userNeighborhood.NeighborhoodId = neighborhoodId;
            userNeighborhood.RoleId = roleId;
            return userNeighborhood;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id = Guid.NewGuid();
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NeighborhoodId
        {
            get
            {
                return _NeighborhoodId;
            }
            set
            {
                OnNeighborhoodIdChanging(value);
                ReportPropertyChanging("NeighborhoodId");
                _NeighborhoodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeighborhoodId");
                OnNeighborhoodIdChanged();
            }
        }
        private global::System.Guid _NeighborhoodId;
        partial void OnNeighborhoodIdChanging(global::System.Guid value);
        partial void OnNeighborhoodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_AppUser", "AppUser")]
        public AppUser AppUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserNeighborHood_AppUser", "AppUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserNeighborHood_AppUser", "AppUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUser> AppUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUser>("COHHomeModel.FK_UserNeighborHood_AppUser", "AppUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUser>("COHHomeModel.FK_UserNeighborHood_AppUser", "AppUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_Neighborhood", "Neighborhood")]
        public Neighborhood Neighborhood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "Neighborhood").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "Neighborhood").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Neighborhood> NeighborhoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Neighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "Neighborhood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Neighborhood>("COHHomeModel.FK_UserNeighborHood_Neighborhood", "Neighborhood", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COHHomeModel", "FK_UserNeighborHood_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("COHHomeModel.FK_UserNeighborHood_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("COHHomeModel.FK_UserNeighborHood_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("COHHomeModel.FK_UserNeighborHood_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("COHHomeModel.FK_UserNeighborHood_Role", "Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
